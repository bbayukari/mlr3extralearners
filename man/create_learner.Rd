% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create_learner.R
\name{create_learner}
\alias{create_learner}
\title{Create a New Learner}
\usage{
create_learner(
  path = ".",
  classname,
  type,
  key,
  package,
  caller,
  feature_types,
  predict_types,
  properties,
  gh_name,
  label,
  data_formats = "data.table"
)
}
\arguments{
\item{path}{(\code{character(1)}) Either a child directory to mlr3extralearners or to a writeable
file
where the learner is created (in this case no test-files are created).
learners.}

\item{classname}{(\code{character(1)})\cr
Suffix for R6 class name passed to LearnerType'classname'.}

\item{type}{(\code{character(1)})\cr
See \code{mlr3::mlr_reflections$task_types$type}.}

\item{key}{(\code{character(1)})\cr
Id for learner, if not provided defaults to the \code{classname} in all lower case.}

\item{package}{(\code{character(1)})\cr
Package from which the learner is implemented, defaults to the \code{classname} in all lower case.}

\item{caller}{\code{character(1)}\cr
Training function called from the implemented package.}

\item{feature_types}{(\code{character()})\cr
Feature types that can be handled by the learner, see
\code{mlr3::mlr_reflections$task_feature_types}.}

\item{predict_types}{(\code{character()})\cr
Prediction types that can be made by the learner, see
\code{mlr3::mlr_reflections$learner_predict_types}.}

\item{properties}{(\code{character()})\cr
Properties that can be handled by the learner, see \code{mlr3::mlr_reflections$learner_properties}.}

\item{gh_name}{(\code{character(1)})\cr
Your GitHub handle, used to add you as the maintainer of the learner.}

\item{label}{(\code{character(1)})\cr
Label for the learner.}

\item{data_formats}{(\code{character(1)})\cr
The data format the learner can deal with (see \code{mlr_reflections$data_formats}).}
}
\description{
Helper function to create a new Learner.
For more details see the \href{https://mlr3book.mlr-org.com/extending.html}{mlr3book}.
}
\examples{
\dontrun{
# Simpler linear regression example
create_learner(
  classname = "LM",
  type = "regr",
  package = "stats",
  caller = "lm",
  feature_types = c("logical", "integer", "numeric", "factor"),
  predict_types = c("response", "se"),
  properties = "weights",
  gh_name = "RaphaelS1",
  label = "Linear Regression"
)
}
}
